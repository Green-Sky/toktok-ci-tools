#!/bin/bash

set -eu

#
# In this script, we output everything to stderr, except things we want Travis
# "eval" to execute. The only way to signal error back to Travis is by telling
# its "eval" to run "exit 1".
#
RUN() {
  echo "+ $@" >&2
  if ! "$@" >&2; then
    echo "exit 1"
  fi
}

# Install the latest CI support tools.
VERSION=$(curl -L -s -H 'Accept: application/json' \
  "https://github.com/TokTok/hs-tools/releases/latest" \
  | egrep -o '"v[0-9][^"]+"' \
  | egrep -o '[^"]+')
TOOLS_URL="https://github.com/Toktok/hs-tools/releases/download/$VERSION/hs-tools-$VERSION.tar.gz"
curl -L -s "$TOOLS_URL" | tar xz -C "$HOME"

# Determine the Haskell package we're building.
PACKAGE=$(echo "$TRAVIS_REPO_SLUG" | sed -e 's|^[^/]*/hs-||')

# Run the build/test/deploy (optional) cycle.
RUN hlint .
RUN stylish-haskell-lhs -i .
RUN git diff --exit-code
RUN stack --no-terminal test --coverage
RUN shc "$PACKAGE" testsuite
RUN stack sdist --tar-dir .

# Check that the tag we're building and trying to release agrees with the
# version number in Cabal.
if [ -n "$TRAVIS_TAG" ]; then
  VERSION="${TRAVIS_TAG/v/}"
  if [ ! -f "$PACKAGE-$VERSION.tar.gz" ]; then
    RUN echo "Package versions or name mismatch"
    RUN ls
    echo "exit 1"
    exit
  fi
else
  VERSION=""
fi

# Export variables here to make them available in the deploy step.
cat <<EOF
export PACKAGE="$PACKAGE"
export VERSION="$VERSION"
EOF
