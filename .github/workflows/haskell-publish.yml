on:
  workflow_call:
    inputs:
      ghc-version:
        required: false
        type: string
        default: "8.10.3"
      cabal-version:
        required: false
        type: string
        default: "3.4"
    secrets:
      API_TOKEN_HACKAGE:
        required: true
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_TOKEN:
        required: true

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          file: .github/docker/Dockerfile
          push: true
          tags: toxchat/haskell:${{ github.event.repository.name }}

  hackage:
    name: Publish to Hackage
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Checkout TokTok/ci-tools
        uses: actions/checkout@v3
        with:
          repository: TokTok/ci-tools
          path: ci-tools

      - uses: haskell/actions/setup@v2
        with:
          ghc-version: ${{ inputs.ghc-version }}
          cabal-version: ${{ inputs.cabal-version }}

      - name: Cache
        uses: actions/cache@v3
        env:
          ghc-version: ${{ inputs.ghc-version }}
          cache-name: cache-cabal
        with:
          path: |
            ~/.cabal/packages
            ~/.cabal/store
            dist-newstyle
          key: ${{ runner.os }}-${{ env.ghc-version }}-${{ env.cache-name }}-${{ hashFiles('**/*.cabal') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.ghc-version }}-${{ env.cache-name }}-
            ${{ runner.os }}-${{ env.ghc-version }}-

      - name: Install non-Haskell dependencies
        run: if [ -f tools/prepare_third_party.sh ]; then tools/prepare_third_party.sh; fi

      - name: Build haddock documentation
        run: cabal update && cabal haddock --haddock-for-hackage --enable-doc

      - name: Publish package candidate to Hackage
        if: ${{ github.event_name == 'push' }}
        env:
          API_TOKEN_HACKAGE: ${{ secrets.API_TOKEN_HACKAGE }}
        run: $GITHUB_WORKSPACE/ci-tools/bin/hackage_upload candidate

      - name: Publish package to Hackage
        if: ${{ github.event_name == 'release' }}
        env:
          API_TOKEN_HACKAGE: ${{ secrets.API_TOKEN_HACKAGE }}
        run: $GITHUB_WORKSPACE/ci-tools/bin/hackage_upload
